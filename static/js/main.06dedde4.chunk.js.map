{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleSubmit","e","preventDefault","onSubmit","id","Math","floor","random","text","handleChange","target","className","type","placeholder","name","onChange","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06dedde4.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 1000),\n            text: input\n        });\n\n        setInput('');\n    };\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    }\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit ? (\n                <>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Update your item\"\n                        value={input}\n                        name=\"text\"\n                        className=\"todo-input edit\"\n                        onChange={handleChange}\n                        ref={inputRef}\n                    />\n                    <button onClick={handleSubmit} className=\"todo-button edit\">Update</button>\n                </>\n            ) : (\n                    <>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add a todo\"\n                            value={input}\n                            name=\"text\"\n                            className=\"todo-input\"\n                            onChange={handleChange}\n                            ref={inputRef}\n                        />\n                        <button onClick={handleSubmit} className=\"todo-button\">Add todo</button>\n                    </>\n                )}\n        </form >\n    )\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id: null,\n            value: ''\n        });\n    };\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\n    }\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className='icons'>\n                <RiCloseCircleLine\n                    onClick={() => removeTodo(todo.id)}\n                    className='delete-icon'\n                />\n                <TiEdit\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\n                    className='edit-icon'\n                />\n            </div>\n        </div>\n    ));\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos)\n        console.log(...todos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    }\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removeArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo;\n        })\n        setTodos(updatedTodos);\n    };\n\n    return (\n        <div>\n            <h1>What's the Plan for Today?</h1>\n            <TodoForm onSubmit={addTodo} />\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}